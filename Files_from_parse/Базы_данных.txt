^^1 .
/&*/---Базы данных---/&*/Основы/&*/ Для чего нужны базы даныных. Что такое СУБД /&*/

Базы данных нужны для хранения, получения и обработки данных.
СУБД (DBSM) - Data Base System Managment
^^
--@&--

^^2 .
/&*/---Базы данных---/&*/Основы/&*/ Что такое реляционные базы данных /&*/

Реляционные базы данных - базы данных,в которых данные распределены по отдельным, но связанным между собой таблицам

^^
--@&--

^^3 .
/&*/---Базы данных---/&*/Основы/&*/ Что такое Кортеж и Отношение /&*/

Кортеж (tuple) - это множество пар {имя атрибута, значение}. 
Например {Фамилия, Петров}, {Телефон, +79211235669} - фактически - это одна строка, где имена атрибутов - это столбцы таблицы
Отношение (relation) - это множество кортежей, соответствующих одной схеме (на прикладном уровне это соотносится с таблицей)
^^
--@&--

^^4 .
/&*/---Базы данных---/&*/Основы/&*/ Что такое Первичный ключ /&*/

Первичный ключ (Primary key) - поле (набор полей) позволяющее однозначно идентефицировать запись в базе данных.
Если ключ состоит из нескольких полей, его называют составным
^^
--@&--


^^5 .
/&*/---Базы данных---/&*/Основы/&*/ Что такое Суррогатный ключ /&*/

автоматически сгенерированное поле, никак не связанное с информационным содержанием записи

^^
--@&--

^^6.
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ Какая команда позволяет использовать ту или иную базу данных /&*/

использовать ту или иную базу данных позволяет команда 

USE название_базы_данных;

например:

USE myfirstdb;  //при этом в окне схемы выбранная база данных подсветится черным цветом


^^
--@&--

^^7 .
/&*/---Базы данных---/&*/Основы/&*/ Что такое Естесственный ключ /&*/

Ключ, состоящий из информационных полей таблицы
^^
--@&--

^^8 .
/&*/---Базы данных---/&*/Особенности SQL/&*/ Основные диалекты SQL /&*/

ДИАЛЕКТЫ SQL:
	PL/SQL (Procedural Language SQL)  // Oracle
	T/SQL (Transact SQL) // MSSQL
	PL/pgSQL (Procedural Language PostGres SQL) // Postgresql
.. и другие

^^
--@&--

^^9 .
/&*/---Базы данных---/&*/Основные операторы SQL/&*/ На какие подгруппы разделяются основные операторы SQL /&*/

SQL Commands подразделяются на:
DDL - Data Definition Language
DQL - Data Query Language
DML - Data Manipulation Languauge
DCL - Data Control Languauge

^^
--@&--

^^10 .
/&*/---Базы данных---/&*/Основные операторы SQL/&*/ Какие операторы включает в себя DDL (группа операторов определения данных) /&*/

create - создание новых объектов баз данных
alter  - изменение существующих объектов
drop   - удаление объектов

^^
--@&--

^^11 .
/&*/---Базы данных---/&*/Основные операторы SQL/&*/ Какие операторы включает в себя DML(группа операторов для манипуляции с данными) /&*/

insert - добавление новых данных
update - изменение данных
delete - удаление данных
select - выборка данных

^^
--@&--

^^12 .
/&*/---Базы данных---/&*/Основные операторы SQL/&*/ Какие операторы включает в себя DCL (группа операторов определения доступа к данным) /&*/

grant  - предоставить права на объект базы
revoke - отозвать у пользователя права на объект
deny   - запрет на объект, имеет более высокий приоритет чем grant


^^
--@&--
^^13 .
/&*/---Базы данных---/&*/Основные операторы SQL/&*/ Какие операторы включает в себя TCL(группа операторов для управления транзакциями) /&*/

Транзакция - это набор команд или инструкций, которые выполняются как единый блок

begin transacton - определяет начало транзакции

commit transaction - применяет транзакцию, конечная точка 

rollback transaction - откатывает все изменения транзакции

save transaction - устанавливает промежуточную точку сохранения внутри транзакции
^^
--@&--

^^14 .
/&*/---Базы данных---/&*/Основные операторы SQL/&*/ Какие основные компоненты СУБД /&*/

Storage engine - подсистема постоянного хранения данных
Query - парсер и транслятор запросов
Query optimizer - оптимизатор запросов
Query executor - подсистема выполнения
Buffer cache - подсистема кэширования данных

^^
--@&--
^^15 .
/&*/---Базы данных---/&*/Подключение к СУБД, компоненты доступа/&*/ Какие интерфейсы для доступа к БД бывают /&*/

ODBC (Open Database Connectivity) - программный интерфейс (API) доступа к базам данных

JDBC (Java DataBAse Connectivity) - программный интерфейс (API) доступа к базам данных в среде Java

другие провайдеры

^^
--@&--

^^16 .
/&*/---Базы данных---/&*/API для работы с sql/&*/ Что такое online sql песочницы /&*/

online sql песочницы - это программы для Работы с sql напрямую из интернета, онлайн-компиляторы

sqlfiddle.com

db-fiddle.com

^^
--@&--

^^17 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ Какая команда позволяет показать все данные таблицы /&*/

показать все данные таблицы можно с помощью команды:

SELECT * FROM название_таблицы;

например:

SELECT * FROM test;  //при этом в окне выведутся все данные таблицы test


^^
--@&--

^^18 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ Как делать выборку из таблицы определенных данных /&*/


SELECT  name, login  // указываем имена полей таблицы, которые нам будут нужны
FROM test   // указывает имя таблицы
WHERE login = 'val87'; // выведутся только строки, в которых login = val87 И не забываем про ';' в конце скрипта



^^
--@&--

^^19 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ С помощью какой командык создать базу данных /&*/
Синтаксис:
CREATE DATABASE название_базы_данных;

Пример:

CREATE DATABASE mydatabase;

^^
--@&--

^^20 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ С помощью какой команды просмотреть список имеющихся баз данных /&*/
Синтаксис:
show databases;


^^
--@&--

^^21 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ С помощью какой команды подключиться к базе данных /&*/
Синтаксис:
USE название_базы_данных;

Пример:

USE mydatabase;

^^
--@&--

^^22 .
/&*/---Базы данных---/&*/Синтаксис языка SQL типы данных /&*/ опишите тип данных INT в MySQL /&*/
Тип данных INT хранит целочисленные значения от -2147483648 до 2147483647, занимает 4 байта

^^
--@&--
^^23 .
/&*/---Базы данных---/&*/Синтаксис языка SQL типы данных /&*/ опишите тип данных DECIMAL в MySQL /&*/
Тип данных DECIMAL хранит числа с заданной точностью (5.2) два последних числа после запятой и три до запятой от -999.99 до 999.99

Пример:
DECIMAL(5,2)   // -999.99 До 999.99
^^
--@&--

^^24 .
/&*/---Базы данных---/&*/Синтаксис языка SQL типы данных /&*/ опишите тип данных BOOL в MySQL /&*/
Тип данных BOOL хранит либо 1 либо 0 (true false)
^^
--@&--

^^25 .
/&*/---Базы данных---/&*/Синтаксис языка SQL типы данных /&*/ опишите тип данных VARCHAR(N) в MySQL /&*/
VARCHAR(N) - это символьный тип данных N определяет максимальную длину строки, которую можно задать
^^
--@&--

^^26 .
/&*/---Базы данных---/&*/Синтаксис языка SQL типы данных /&*/ опишите тип данных DATE в MySQL /&*/
тип DATE хранит только дату:
диапазон от 1000-01-01 по 9999-12-31
^^
--@&--

^^27 .
/&*/---Базы данных---/&*/Синтаксис языка SQL типы данных /&*/ опишите тип данных TIME в MySQL /&*/
тип TIME хранит только время - часы, минуты, секунды - "hh:mm:ss"
Память хранения - 3 байта

^^
--@&--

^^28 .
/&*/---Базы данных---/&*/Синтаксис языка SQL типы данных /&*/ опишите тип данных DATETIME в MySQL /&*/
тип DATETIME 
хранит время - часы, минуты, секунды - "hh:mm:ss"
хранит дату в диапазоне от 1000-01-01 по 9999-12-31
Использует 8 байтов памяти

^^
--@&--

^^29 .
/&*/---Базы данных---/&*/Синтаксис языка SQL типы данных /&*/ опишите бинарные типы данных в MySQL /&*/
тип BLOB хранит до 65 Кб бинарных данных
тип LARGEBLOB хранит до 4 Гб бинарных данных

^^
--@&--

^^30 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ Напишите пример создания первичного и внешнего ключа /&*/
первичный ключ - primary key (pk)
внешний ключ - foreign key (fk)

CREATE TABLE Customers
(
	Id INT PRIMARY KEY AUTO_INCREMENT, //первичный ключ
	Age INT,
	FirstName VARCHAR(20) NOT NULL,
	LastName VARCHAR(20) NOT NULL,
	Phone VARCHAR(20) NOT NULL UNIQUE
);
CREATE TABLE Orders
(
	Id INT PRIMARY KEY AUTO_INCREMENT, //первичный ключ
	CustomerId INT,
	CreatedAt Date,
	FOREIGN KEY (CustomerId) REFERENCES Customers (Id) //внешний ключ - указывает какое поле текущей таблицы связано с каким полем внешней таблицы
);	


^^
--@&--

^^31 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ какой синтаксис комментариев в языке MySql /&*/
Синтаксис:

-- текст_комментария
# текст_комментария
/*
многострочный
комментарий
*/

^^
--@&--

^^32 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ опишите синтаксис основных арифметических операций в языке MySql /&*/
1.Сложение:

Синтаксис:
SELECT первый_аргумент + второй_аргумент
Пример:
SELECT 3+5
-- вернет 8

2.Вычитание:

Синтаксис:
SELECT первый_аргумент - второй_аргумент
Пример:
SELECT 3-5
-- вернет -2

3.Умножение:

Синтаксис:
SELECT первый_аргумент*второй_аргумент
Пример:
SELECT 3*5
-- вернет 15
-- нужно следить, чтоб резльтат не вышел на пределы INT, в противном случае нужно использовать BIGINT

4.Деление:

Синтаксис:
SELECT первый_аргумент/второй_аргумент
Пример:
SELECT 9/5

-- вернет 1.8000
^^
--@&--

^^33 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ какой синтаксис логических операторов в языке MySql /&*/

1.AND:
-- истина, когда оба выражения истина
Синтаксис:
SELECT выражение1 AND выражение2
Пример:

2.OR:
-- истина, когда хотя бы одно истина
Синтаксис:
SELECT выражение1 OR выражение2
Пример:

3.NOT:
-- истина, когда выражение ложно
Синтаксис:
NOT выражение1 
Пример:

^^
--@&--

^^34 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ какой синтаксис конструкции CASE WHEN THEN в языке MySql /&*/


USE productsdb;

SELECT ProductName, ProductCount,   //используем две колонки из таблицы, которые будут выведены на экран и взависимости от значения ProductCount добавляется колонка Category куда записывается значение, указанное после оператора THEN 
CASE
    WHEN ProductCount = 1
	THEN 'Товар заканчивается'
    WHEN ProductCount = 2
	THEN 'Мало товара'
    WHEN ProductCount = 3
	THEN 'Есть в наличии'
    ELSE 'Много товара'		//если значение не равно ни одному из предложенных, присваивается по умолчанию
END AS Category		//соответствующее значение добавляется в вновь создаваемую колонку Category
FROM Products;	

^^
--@&--

^^35 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ какой синтаксис условного оператора if в языке MySql /&*/

IF(условие, значение_1, значение_2)  //если условие, передаваемое в качестве аргумента верно, то возвращается первое значение, если ложно то второе значение



USE productsdb;

SELECT ProductName, Manufacturer//используем две колонки из таблицы, которые будут выведены на экран 
	IF(ProductCount>3, 'Много товара','Мало товара' //название результирующей колонки будет такое же как и условие 
FROM Products;	

^^
--@&--
^^36 .
/&*/---Базы данных---/&*/Синтаксис языка SQL, запросы изменения данных /&*/ какие запросы изменения данных в языке MySql вы знаете /&*/

Позволяют наполнять, изменять, удалять данные минуя графический интерфейс

INSERT   // вставка новых данных в таблицу

UPDATE   // обновление данных их таблицы

DELETE   // удаление данных
^^
--@&--

^^37 .
/&*/---Базы данных---/&*/Синтаксис языка SQL, запросы изменения данных /&*/ какой синтаксис запроса INSERT в языке MySql /&*/

Данный оператор имеет 2 основные формы:
1.  INSERT INTO таблица(перечень_полей)
VALUES(перечень_значений)  //вставка в таблицу новой строки значения полей которой формируются из перечисленных значений

2. INSERT INTO таблица(перечень_полей) SELECT перечень_значений FROM...   //вставка в таблицу новых строк возвращенных запросом

// 1.
CREATE TABLE Products
(
	Id INT AUTO_INCREMENT PRIMARY KEY,
	ProductName VARCHAR(30) NOT NULL,
	Manufacturer VARCHAR(20) NOT NULL,
	ProductCount INT DEFAULT 0,
	Price DECIMAL
);
INSERT INTO Products (ProductName, Manufacturer, ProductCount, Price)
VALUES
('iPhone X', 'Apple', 3, 76000),
('iPhone 8', 'Apple', 2, 51000),
('Galaxy S9', 'Samsung', 2, 56000),
('Galaxy S8', 'Samsung', 1, 41000),
('P20 Pro', 'Huawei', 5, 36000);


^^
--@&--

^^38 .
/&*/---Базы данных---/&*/Синтаксис языка SQL, запросы изменения данных /&*/ какой синтаксис запроса UPDATE в языке MySql /&*/

UPDATE имя_таблицы
SET столбец1 = значение1, столбец2 = значение2, ... столбецN = значениеN
[WHERE условие_обновления]

Например:

UPDATE Products
SET Price = Price + 3000;  //увеличим цену всех продуктов на 3000



^^
--@&--

^^39 .
/&*/---Базы данных---/&*/Синтаксис языка SQL, запросы изменения данных /&*/ какой синтаксис запроса DELETE в языке MySql /&*/

DELETE FROM имя_таблицы
[WHERE условие_удаления]

Например:

DELETE FROM Products
WHERE Manufacturer='Huawei';  //удалит из таблицы все строки с производителем Huawei


^^
--@&--

^^40 .
/&*/---Базы данных---/&*/Синтаксис языка SQL,утилита Commandline Client  /&*/ как работать с утилитой Commandline Client /&*/

1. Заходим в утилиту Commandline Client
2. Вводим пароль от mysql
3. Далее использую обычный синтаксис mysql пишем скрипты
//4.
show databases;    //посмотреть все базы данных
//5.
use myfirstdatabase;  //выбираем конкретную базу данных
//6.

^^
--@&--

^^41 .
/&*/---Базы данных---/&*/Синтаксис языка SQL /&*/ какой синтаксис оператора IN в языке MySql /&*/

SELECT * FROM Products;

WHERE Manufacturer IN ("Apple", "Samsung");   //выводит из таблицы все данные, где поле Manufacturer попадает под указанные значения


^^
