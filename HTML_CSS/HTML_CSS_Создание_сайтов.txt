^^1 .
/&*/---HTML_CSS_создание_сайтов---/&*/принципы отображения информации/&*/Как отрабатывается html запрос браузером /&*/

Пользователь, запрашивая требуемый ему ресурс, вбивает например в строке поиска нужный ресурс, отправляет запрос бразуеру
Браузер в свою очередь пересылает запрос на сервер, сервер отыскав необходимый ресурс, возвращает его браузеру в ввиде 
html-кода (картинки подгружаются дополнителтьно), браузер интерпретирует этот html-код в привычную нам страницу

^^
--@&--

^^2 .
/&*/---HTML_CSS_создание_сайтов---/&*/принципы отображения информации/&*/Какие два документа отвечают за отображение html-страницы /&*/

Документ HTML - отображение разметки страницы (название_документа.html)
Документ CSS - стили оформления страницы   (название_документа.css) (где, какой шрифт, какой размер, какие эффекты...)

^^
--@&--

^^3 .
/&*/---HTML_CSS_создание_сайтов---/&*/принципы отображения информации/&*/Как создать html документ /&*/

достаточно создать текстовый документ с расширением .html при этом он будет открываться с помошью браузера
HTML (HyperText Markup Language) - язык гипертекстовой разметки для просмотра веб-страниц в браузере

^^
--@&--

^^4 .
/&*/---HTML_CSS_создание_сайтов---/&*/принципы отображения информации/&*/Файлы с каким расширением кроме .html и .css ещё могут использоваться для создания сайтов /&*/

 для расширения функционала сайтов используются файлы с исполняемым кодом, так называемые Java скрипты (с расширением .js), которые предятавляют собой файлы с исполняемым кодом на языке Java-Script
c их помощью можно реализовывать поиск, анимацию, вход в аккаунты и т.д.

^^
--@&--

^^5 .
/&*/---HTML_CSS_создание_сайтов---/&*/-----работа в VSC---- /&*/как называют основной файл в проекте  html /&*/

название основного файла в проектах HTML - это файл с именем index.html (при сборке проекта браузер автоматически ищет главный файл по этому имени)


^^
--@&--

^^6 .
/&*/---HTML_CSS_создание_сайтов---/&*/-----работа в VSC---- /&*/где предпочтительнее создавать файлы, входящие в проект: в редакторе или непосредственно в каталоге /&*/

предпочтительнее созлдавать файлы для своего проекта непосредственно в редакторе, либо при создании прямо в каталоге (в проводнике) обращать внимание на то, чтобы текстовые документы, которые создавались были в кодировке UTF-8


^^
--@&--


^^7 .
/&*/---HTML_CSS_создание_сайтов---/&*/-----работа в VSC---- /&*/как сгенерировать произвольный текст в VSC и что означает точка возле названия открытого файла /&*/

набирая lorem и нажимая клавишу tab можно сгенерировать предложение:
Lorem ipsum dolor sit, amet consectetur adipisicing elit. Dolorum architecto saepe in illo doloremque, ad explicabo aperiam minus consectetur alias optio quibusdam sequi distinctio, ut at obcaecati ex quod nobis?
Токча возле названия файла означает, что в документе есть не сохраненные изменения.


^^
--@&--

^^8 .
/&*/---HTML_CSS_создание_сайтов---/&*/-----работа в VSC---- /&*/как браузер отобразит html страницу, если не использовать теги /&*/

в случае, если в html странице отсутствуют теги, указывающие чем именно является тот или иной текст (заголовком, абзацем....) браузер отобразит
содержимое html документа как сплошной текст.


^^
--@&--

^^9 .
/&*/---HTML_CSS_создание_сайтов---/&*/Создание html-документа /&*/как сформировать html-документ с базовой структурой разметки  /&*/

вводим в редакторе !  и нажимаем Tab получаем html-документ с базовой структурой разметки


^^
--@&--

^^10 .
/&*/---HTML_CSS_создание_сайтов---/&*/Создание html-документа /&*/как убрать панель-проводник в VSC и увеличить размер шрифта  /&*/

чтобы убрать панель-проводник в VSC необходимо нажать в левом врехнем углу на значок (двойной-лист), чтобы вернуть - нажать на него повторно
для увеличения отображения шрифта необходимо нажать комбинацию Ctrl+


^^
--@&--


^^11 .
/&*/---HTML_CSS_создание_сайтов---/&*/Создание html-документа /&*/какова структура элемента в html-документе  /&*/
<название_тега>   - открывающий тег
содержание  	  - содеражание элемента
</название_тега>  - закрывающий тег


^^
--@&--

^^12 .
/&*/---HTML_CSS_создание_сайтов---/&*/Создание html-документа /&*/для чего нужен тег <body> </body>  /&*/

тег <body> </body>  предназначен для отображения контента, который демонстрируется на html-странице
<body>   - открывающий тег
контент	  - содеражание элемента
</body>  - закрывающий тег


^^
--@&--

^^13 .
/&*/---HTML_CSS_создание_сайтов---/&*/Создание html-документа /&*/для чего нужен тег <html> </html>  /&*/

между тегами  <html> </html>  заключается вся информация о сайте
<html>   - открывающий тег
вся информация о сайте
</html>  - закрывающий тег


^^
--@&--

^^14 .
/&*/---HTML_CSS_создание_сайтов---/&*/Создание html-документа /&*/какой тег используется для записи служебнной информации /&*/

между тегами  <head> </head>  заключается вся служебная информация
<head>   - открывающий тег
служебная информация
</head>  - закрывающий тег


^^
--@&--

^^15 .
/&*/---HTML_CSS_создание_сайтов---/&*/Создание html-документа /&*/какова структура тега служебной информации <head>  </head> /&*/

между тегами  <head> </head>  заключается вся служебная информация
пример:

<head>
    <meta charset="UTF-8">     - кодировка, в которой написан сайт
    <meta http-equiv="X-UA-Compatible" content="IE=edge">        - специальная информация, чтобы написанный документ был совместим с браузером edge
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
								- "viewport" - имя отображения
								- content="width=device-width  - означает, что ширина отображаемого контента будет подстраиваться под то устройство, на котором воспроизводится
								- initial-scale=1.0"  - количество пикселей (равно нормальному значению)



    <title>Document</title>					-Document - название страницы (вкладки в окне браузера)
</head>

-как правило все html-документы однотипты и не требуют изменения тега со служебной информацией



^^
--@&--


^^16 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/как изменить количество отступов между названием тега и содержимым элемента /&*/

на нижней панели VSC кликаем на вкладку Spaces:4 (которая означает, что количество отступов равно 4) и нажав во всплывающем меню на Indent Using Spaces выбираем нужно количество отступов


^^
--@&--

^^17 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/как создать заголовок в html-документе /&*/

для создания заголовка в html-документе необходимо воспользоваться тегами <h1> содержание_заголовка </h1>
текст заголовка в браузере отобразится жирным, возможно создание нескольких уровней заголовков от h1 до h6
h1 - главный заголовок, все остальные - подзаголовки, их может быть сколь угодно много

^^
--@&--

^^18 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/как просмотреть отображение элемента в html-коде страницы /&*/

необходимо кликнуть правой кнопкой по интересующему элементу и выбрать вкладку (исследовать элемент), откроется окно (инструмент разработчика), описывающее html-код данного элемента

^^
--@&--

^^19 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/какой вариант отображения инструмента разработчика предпочтительнее всего выбирать для работы /&*/

удобнее всего использовать вариант отображения инструмента разработчика в отдельном окне - чтобы ни как не искажалось отображение разрабатываемой страницы
кроме того возможны различные варианты расположения данного инструмента (справа, слева, снизу....)

^^
--@&--

^^20 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/как добавить новый абзац. Тег <p> </p> /&*/

для добавления нового абзаца необходимо добавить тег <p> </p> и между ними заключить содержимое абзаца, причём не помещающийся на ширину страницы в браузере текст будет автоматически
переноситься на новую строку, в окне редактора же перенос осуществляться не будет

^^
--@&--

^^21 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/как Изменить размер шрифта в редакторе без изменения размера остальных элементов редактора /&*/

заходим в File ----> Preference ------>  Settings ------> Text Editor ------> Font --------> Font Size    Устанавливаем требуемый шрифт, сохранения не требует

^^
--@&--

^^22 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/Для чего используются дополнительные расширения при работе с VSC  (Extensions) /&*/

Extensions используются для дополнительных возможностей при работе с редактором

Например для удобства форматирования вводимого нами кода в редактор установим расширение Prettier


^^
--@&--

^^23 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/Как просмотреть список уже установленных расширений при работе с VSC  (Extensions) /&*/

Необходимо во вкладке Extensions закрыть окно поиска и нажать вкладку INSTALLED
во всплывающем списке будут отображены все установленные расширения, а также рекомендованные к установке во вкладке RECOMMENDED


^^
--@&--

^^24 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/Как автоматически отформатировать набранный в редакторе код /&*/

Можно выбрать редактор по умолчанию в разделе Settings вместе с тем, это не удобно, так как в VSC могут разрабатываться и другие файлы, отличные от HTML документов
Поэтому просто кликаем правой клавишей на любом месте документа, выбираем вкладку Format Document With и выбираем один из возможных редакторов (либо которые есть по умолчанию, либо установленные)

^^
--@&--

^^25 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/Как в браузере отображаются параграфы один относительно другого /&*/

если набрать в редакторе несколько тегов 
<p> абзац 1 </p>
<p> абзац 2 </p>
то они будут отображены с небольшим отступом друг относительно друга (как параграфы)


^^
--@&--

^^26 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/Что такое блочные теги и строчные теги, приведите примеры /&*/
в блочных тегах содержимое отображается каждого тега с новой строки
к блочным тегам относятся заголовки <h1> (до <h5>) , абзацы <p>

в строчных тегах содержимое отображается друг за другом, например тег <span> содержимое </span>
Пример:
<span> содержимое </span>
<span> содержимое_1 </span>

Результат в браузере:
содержимое содержимое_1  

^^
--@&--

^^27 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/Для чего можно применять строчные теги /&*/
строчные теги, например <span> </span>  можно применять, в качестве вложенных, допустим если внутри абзаца необходимо применить 
форматирование, отличное от общего стиля форматирования

^^
--@&--

^^28 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c СSS-документами /&*/Что такое CSS документы /&*/
CSS - Cascading Style Sheets Каскадные таблицы стилей
Их принято выделять в отдельные файлы, которые подключаются к html-документу


^^
--@&--

^^28 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c СSS-документами /&*/как добавить оформление определенного тега /&*/
допустим нам нужно применить оформление к тегу 
<span> содержимое </span>
В открывающем теге набираем style, далее в автозаполненной форме набираем font-style  (стиль шрифта) выбираем в предложенном списке например italic (курсив) и перед закрывающей кавычкой ставим ;


^^
--@&--

^^29 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c СSS-документами /&*/как задать оформление для определенного тега в блоке <head> </head> /&*/
допустим нам нужно применить оформление к тегу через тег <head>:

в блоке <head> набираем тег <style> </style>
между открывающим и закрывающим тегом набираем название тега, к которому необходимо применить оформление 
span далее открывающие и закрывающие фигурные скобки {    }   а между ними способ оформления например: font-style: italic;

Итоговый вариант кода:
<style>
	span {
	font-style: italic;
	}
</style>
		

^^
--@&--

^^30 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c СSS-документами /&*/как задать оформление отдельному элементу страницы с помощью прикрепления файла css /&*/
1. В корне проекта в редакторе создаём папку с именем static
2. В папке static создаём ещё одну папку styles
3. В папке styles создаём файл style.css
4. В файл style.css вставим код, определяющий стиль для тега span

span {
	font-style: italic;
	}
5. Прикрепляем файл style.css к html-файлу, для этого в разделе <head> набираем <link>, во всплывающем меню link:css, в результате автозаполнения получаем:
<link rel="stylesheet" href="style.css"> 

	- stylesheet указывает, что прикрепляемый файл это таблица стилей
	- style.css    - это путь к файлу, в котором описано оформление стилей
кроме того путь можно выбрать вручную, в атрибуте href начинаем набирать название папки, в которой лежит файл, пользуемся автозаполнением
^^
--@&--

^^31 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c СSS-документами /&*/как открыть режим редактирования split так чтобы два файла были открыты в одном окне /&*/
для удобства скрываем режим проводника
в правой верхней части экрана нажимаем кнопку Split при этом активный файл продублируется во второй части экрана


^^
--@&--

^^32 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c СSS-документами /&*/как задать цвет фону текста и самому тексту /&*/
в файле с описанием стилей задаем:
background-color: black;    - чёрный фон
color: red;                 - красный шрифт


^^
--@&--

^^33 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML-документами /&*/как добавить комментарий/&*/
чтобы добавить комментарий в текст HTML или CSS документа необходимо зажать комбинацию Ctrl+(?/)
Если эту комбинацию набрать в конце строчки, то вся строка будет помещена в комментарий


^^
--@&--

^^33 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/что подразумевается под каскадностью стилей/&*/
Как мы уже убедились существует три способа задать стилизацию (оформление) тегов (элементов), при этом существует приоритет:
Наивысший - стиль, прописанный непосредственно в самом теге
Второстепенный (link - через привязанный css файл, style описанный в блоке head)
Причём действовать будет тот, который оформлен в блоке head последним
Но в общем случае принято использовать стилизацию, описанную в css файлах

^^
--@&--

^^34 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/что нужно сделать, чтобы сделать различное оформление к тегам с одинаковым названием/&*/
Допустим нам необходимо, чтобы тег с одним названием (например span) в одном месте доумента был просто курсивом, а в другом месте - жирным курсивом
Для этого в открывающей части тега добавляют слово class и придумывают имя класса, которое будет с новым вариантом оформления, при этом в самом файле css через точку прописывается имя класса и вариант оформления


^^
--@&--

^^35 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/как создать ссылку на страницу в интернете. Тег <a href=""> </a> /&*/
Синтаксис:

<a href="адрес, по которому будет осуществлён переход"> имя_по_которому_необходимо_кликнуть_чтоб_перейти</a>
Пример:
<a href="#">HTML</a>    - ссылка-заглушка, вместо адреса перехода используется #
<a href="https://youtube.com">HTML</a>   - при нажатии на HTML будет осуществлён переход по адресу: https://youtube.com

^^
--@&--

^^36 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/как сделать, чтобы ссылка открывалась в новом окне /&*/

Необходимо в открывающем теге <a href="адрес, по которому будет осуществлён переход"> добавить target="_blank"
Синтаксис:

<a href="адрес, по которому будет осуществлён переход" target="_blank"> имя_по_которому_необходимо_кликнуть_чтоб_перейти</a>
Пример:
<a href="#">HTML</a>    - ссылка-заглушка, вместо адреса перехода используется #
<a href="https://youtube.com" target="_blank">HTML</a>   - при нажатии на HTML будет осуществлён переход по адресу: https://youtube.com в новой вкладке

^^
--@&--

^^37 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/как настроить горячие клавиши в VSC /&*/

1. Заходим в Settings ---> Keyboard ShortCuts (либо нажимаем CTRL+K CTRL+S)
2.Набираем wrap и во вкладке Keybinding назначаем новую комбинацию клавиш допустим CTRL+W
3.Теперь чтобы обрамить в ссылку нужную нам фразу достаточно выделить её и нажать CTRL+W далее во всплывающем меню набрать "a" и Enter
  
^^
--@&--


^^37 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/как в тексте одной html страницы сделать ссылку на другую страницу html /&*/

1. Создадим в корне проекта ещё один файл html (допустим page.html)
2.<a href="page.html">HTML</a>     - вместо адреса интернет страницы указаываем название html документа, на который необходимо перейти

  
^^
--@&--

^^37 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/как добавить нумерованный список на страницу html /&*/

Синтаксис:
<ol>    - открывающий тег нумерованного списка
     <li>Общее представление</li> - перечисляемые элементы
     <li>Браузеры</li> - перечисляемые элементы (нумерация автоматическая)
</ol>   - закрывающий тег нумерованного списка

для маркированных списков используем тег <ul>    </ul>

  
^^
--@&--

^^38 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/как добавить вложенный список на страницу html /&*/
Для добавления вложенного списка необходимо внутри нужной записи с тегами <li> нужная запись </li> оформить еще одну структуру списка с нижеперечисленным синтаксисом:

Синтаксис:
<ol>    - открывающий тег нумерованного списка
     <li>Общее представление</li> - перечисляемые элементы
     <li>Браузеры</li> - перечисляемые элементы (нумерация автоматическая)
</ol>   - закрывающий тег нумерованного списка

для маркированных списков используем тег <ul>    </ul>

  
^^
--@&--

^^39 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа в VSC c HTML, CSS -документами /&*/как добавить картинку на html страницу /&*/
для добавления картинки используется тег <img src="" alt=""> причём данный тег не имеет закрывающего тега

Синтаксис:
<img src="адрес расположения картинки" alt="Альтернативный вариант отображения, если картинку не получилось отобразить">

 
^^
--@&--

^^40 .
/&*/---HTML_CSS_создание_сайтов---/&*/Принципы позиционирования, виды контейнеров в html-разметке /&*/как в инструментах разработчика отображаются блочные элементы, например с тегом <p> </p> /&*/

element.style {             - означает, что блочный элемент занимает всю ширину предоставляемого экрана
}
user agent stylesheet
p {
    display: block;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
}
^^
--@&--


^^41 .
/&*/---HTML_CSS_создание_сайтов---/&*/Принципы позиционирования, виды контейнеров в html-разметке /&*/как в инструментах разработчика отображаются строчные элементы, например с тегом <snap> /&*/

element.style {      - не занимает ширину всей строки в представленном экране, а только по количеству символов
}
^^
--@&--

^^42 .
/&*/---HTML_CSS_создание_сайтов---/&*/Принципы позиционирования, виды контейнеров в html-разметке /&*/как установить значение отступов для блоков (тегов) /&*/

для установления фиксированного значения отступов для блоков (тегов) необходимо в файле css установить параметр:
margin: 30px      - установит одинаковый для всех сторон (сверху, снизу, слева, справа)отступ от блока
Для установки отступов непосредственно с одной стороны используют следующие команды:
margin-top:  - отступ сверху
margin-bottom: - отступ снизу
margin-left:   - отступ слева
margin-right:  - отступ справа

^^
--@&--

^^43 .
/&*/---HTML_CSS_создание_сайтов---/&*/Принципы позиционирования, виды контейнеров в html-разметке /&*/как убрать для всех блоков (тегов) значение margin по умолчанию (сделать его равным 0) /&*/

для обнуления фиксированного значения отступов для всех блоков (тегов) необходимо в файле css установить параметр:
* {
	margin: 0;
  }

^^
--@&--

^^44 .
/&*/---HTML_CSS_создание_сайтов---/&*/Принципы позиционирования, виды контейнеров в html-разметке /&*/как регулировать величину отступа от границы контейнера до начала контента /&*/

для регулировки величины отступа от границы контейнера до начала контента используют оператор padding:  который также прописывают в файле сss для конкретного тега (блока)
например:

p {
	padding: 30px;
  }

^^
--@&--

^^45 .
/&*/---HTML_CSS_создание_сайтов---/&*/Принципы позиционирования, виды контейнеров в html-разметке /&*/как провести компоновку контейнеров /&*/

для компоновки контейнеров используем тег <div>  </div> он также является блоковым (парным)
1. Заключаем теги, которые необходимо скомпоновать между тегами div и в файле css ставим для наших тегов параметр display: inline;  
который автоматически сделает наши теги не блоковыми а строчными (то есть занимающими область экрана соразмерно своему контенту

^^
--@&--

^^46 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/как провести выравнивание контента в контейнере /&*/

1. Для удобства присваиваем контейнеру имя класса
2. В файле .css обращаемся к конкретному контейнеру через .имя_контейнера и применяем опреацию text-alighn

.conteyner {
    text-align: center;
}

выравнивание будет осуществляться исходя из ширины контейнера (если он блочный то относительно его ширины)
^^
--@&--

^^47 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/как задать ширину контейнеру /&*/

ширина контейнера может быть не только по ширине экрана, но и задана с помощью команд 
width: 500px;     - задали ширину контейнера 500 пикседлей, также можно задать и высоту
при этом очень важно помнить, что для контейнеров типа inline понятия ширины и высоты не применимы, поскольку его задача обтекать контент, который он окружает

пример:

.conteyner {
    text-align: center;
    width: 500px;
    
}

^^
--@&--

^^48 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/чем отличаются контейнеры типов block,inline,inline-block /&*/

контейнеры типа block - занимают всю ширину экрана
контейнеры типа inline - занимают ширину контента
контейнеры типа Inline-block  позволяют задать ширину и высоту произвольно

^^
--@&--


^^49 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/как добавить контенеры типа inline-block и как они будут располагаться /&*/

при добавлении контейнеров типа inline-block они будут размещаться один возле другого, так как не занимают ширину всего экрана а лишь их ширина равна ширине макисмального контента

если добавить ещё несколько контейнеров, то при невозможности разместить рядом еще один, остальные будут будут размещаться на второй строчке под первыми, при этом при уменьшении ширины
экрана будет осуществляться автоматическое их перестроение 

для того, чтобы применять допустим компановку по три карточки заключаем три контейнера с карточками товара во внешний контейнер, но уже типа block

^^
--@&--

^^50 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/как просмотреть варианты отображения контента на экранах различных устройств /&*/

в инструментах разработчика есть специальная кнопка, нажав которую можно просмотреть вариант отображения вашего контента на экранах компьютера, планшета, телефона....
даже есть конкретные модели

^^
--@&--

^^51 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/что такое flex контейнеры /&*/
flex-контейнеры это контейнеры с параметром display: flex;   которые позволяют удобно позиционировать контент, который в них находится (сверху, снизу, по центру....)
по-другому эти контейнеры называют ещё одномерные контейнеры, у них есть свойство flexdirection: row;  (по умолчанию - отображение контента в строку)
flexdirection: column;  (отображение контента в столбец)
^^
--@&--

^^52 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/опишите свойство justify-content в flex контейнерах /&*/
свойство justify-content позволяет разместить контент, находящийся в одномерном контейнере в различных положениях
слева с начала, справа в конце, по центру, на равномерном расстоянии между друг другом......
при этом при уменьшении ширины экрана не будет происходит автоматического переноса контента на вторую строку

^^
--@&--

^^53 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/как применить стилизацию ко всем изображениям, содержащимся с контейнерах div класса conteyner /&*/
в документе .css добавляем свойство:

.conteyner>img {    -Это будет означать, что стилизация будет применена ко всем изображениям в классе conteyner
    
}

например:

.conteyner>img {
   width: 300px;     - для всех картинок установит ширину 300px
}

^^
--@&--

^^55 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/как заключить контент, содержащийся в контейнере в рамку /&*/
в документе .css добавляем свойство:

.list-conteyner {
    border-style: solid;   - в зависимости от типа контейнера (block, inline, inline-block) рамка будет добавлена или на ширину контента или на всю ширину страницы
}

^^
--@&--

^^56 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/с помощью какого свойства сделать жирный шрифт контента /&*/
в документе .css добавляем свойство:

font-weyght: bold;    - сделает контент жирным шрифтом

^^
--@&--

^^57 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/с помощью какого свойства можно разместить контент в блочных тегах в определенном месте/&*/
с помощью свойства float
например картинку разместить справа:

img {
    float: right;      -но не стоит часто ичпользовать этой свойство, причём оно не доступно во flex-контейнерах
}

при применении свойства float в блочном контейнере он перестает вести себя как блочный и превращается в инлайновый (не занимает ширину всего экрана)

^^
--@&--

^^58 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/как создать навигационную панель (см. образец в файле 58)/&*/
1. Выделяем отдельный блок div для навигационной панели
2. Создаём блок <nav> </nav>   - блок для формирования навигационной панели
3. Можно навиганционную панель фомрировать с помощью множества блоков div либо с помощью списков
Выберем вариант со списками
4.Создаём маркированный список с вкладками левой части нав. панели
5. Создаём ещё один блок <nav> </nav>, в котором создаём ещё один маркированный список с вкладками правой части нав. панели
6. Помещаем все вкладки навигационной панели в ссылки
7. Добавим имя контейнеру с навигационной панелью например nav-conteyner
8.В файле .css пропишем свойство display: flex,благоларя которому наши списки разместяться один возле другого и применим свойство
justify-content: space-between; при этом расстояние между правой и левой частью навигационной панели равномерно распределится между ними.
9. Добавим во второй список поле для ввода текста с помощью тега:
<input type="text">
10. В тег с надписью <input>  добавляем свойство placeholder="Поиск", которое будет выводить подсказку 
11. Для того, чтобы вкладки навигационной панели располагались не в столбец а в строку, необходимо спискам ul добавить свойство display: flex;
при этом обращаться к блокам ul будем через наследование .nav-conteyner>nav>ul
12. Уберем точки из маркированного списка с помощью свойства:
list-style: none;
13. Теперь, чтобы можно наши ссылки было сделать кнопками - то есть задавать им ширину и высоту меняем через наследование у элементов <li> свойство display на block
14. далее задаем свойство padding для тегов <a>, а также по играем со свойствами margin и padding анализируя инструмент разработчика
15. если начать сдвигать экран, то сначала начнёт уменьшаться расстояние между левой и правой частью навигационной панели, а затем кнопки панели начнут менять форму, от этого надо избавиться.
	Для этого реализуем медиа-запросы - в зависимости от ширины экрана могут использоваться различные стили с помощью свойства @media
	Нужно реализовать, чтобы как только кнопки начинают соприкасаться - правые кнопки переносились на вторую строку
Добавляем в файл .css 
@media(max-width: 900px) {   /*это означает, что для экранов с разрешением до 900px ,будут применяться стили, которые будут описаны ниже для соответсвующих блоков
 /*для больших разрешений будут применяться стили, описанные выше указанного свойства
    
}

укажем для блока .nav-conteyner свойство flex-direction: column;  которое позволит выстроиться блокам из кнопок друг под другом


16. Добавим фон для нашей навигационной панели, для этого для всего блока nav-conteyner добавим свойство background-color
^^
--@&--

^^59 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/имеется нав. панель и блок контента, необходимо слева от них разместить еще олну нав. панель как это сделать /&*/
1. Верхнюю навигационную панель и блок контента заключаем в отдельный контейнер div  и называем его section
2. Для левой навигационной панели создаём контейнер с именем header
3. Для того чтобы левая панель и блок контента с верхней панелью встали один возле другого - заключаем их в общий контейнет с именем page и добавляем ему свойство display: flex;
и по умолчанию свойство flex-direction будет равно row
4. Для блока с левой навигационной панелью выделим 10% ширины экрана, а для блока с контентом и верхней панелью 90%
5. Немного прераспределим их по отношению друг к другу, в контейнере page применим свойство justify-content: center; которое распределит по середине  первый и второй блок flex контейнера page и за счёт этого равномерно добавятся отступы справа и слева


^^
--@&--

^^60 .
/&*/---HTML_CSS_создание_сайтов---/&*/Работа с контейнерами в HTML-документе/&*/как убрать нижнее подчёркивание изо всех ссылок /&*/
Лучше всего это делать в блоке <head>

<style>
        a {
            text-decoration: none;
        }
    </style>
^^
--@&--

^^61 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/какой приоритет имеют  свойства в файлах CSS /&*/
Если в файле CSS имеется одно и то же свойство (допустим окрас заднего фона) контейнера, то применяться будет тот, который определен в файле SCC ниже

<div>
    <p>text 1</p>
    <p>text 1</p>
    <div>
        <p>text 2</p>
        <p>text 2</p>
    </div>
 </div>

---------------------------

div {
    background-color: aqua;
}
div {
    background-color: red;      /* результирующим цветом будет красный
}
--@&--

^^62 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/какой приоритет имеют  свойства в файлах CSS при присваивании имени класса /&*/
Если в файле CSS имеется одно и то же свойство (допустим окрас заднего фона) контейнера, то применяться будет тот, который определен в файле SCC ниже

<div class="main">
    <p>text 1</p>
    <p>text 1</p>
    <div>
        <p>text 2</p>
        <p>text 2</p>
    </div>
 </div>

---------------------------

div {				/* сначала все параграфы окрасятся в цвет aqua
    background-color: aqua;
}
.main {
    background-color: red;      /* следом все параграфы в классе main окрасятся в красный
}
--@&--

^^63 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/какой приоритет имеют  свойства в файлах CSS при присваивании id /&*/
Если в файле CSS имеется одно и то же свойство (допустим окрас заднего фона) контейнера, то применяться будет тот, который определен в файле SCC ниже

<div class="main" id="main-2">
    <p>text 1</p>
    <p>text 1</p>
    <div>
        <p>text 2</p>
        <p>text 2</p>
    </div>
 </div>

---------------------------

div {
    background-color: aqua;
}
.main {
    background-color: red;
}
#main-2 {				/* в итоге параграфы под id="main-2" окрасятся в фиолетовый цвет 
    background-color: blueviolet;
}
--@&--

^64 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/какой приоритет имеют между собой стили по тегу, по классу, по id, в самом теге/&*/
Если в файле CSS имеются определения стилей по разным вариантам то они имеют следующий вес:
по тегу - 1
по классу - 10
по id - 100
по определению стиля в самом теге - 1000


--@&--
^65 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/как нужно стараться пользоваться приоритетом в стилизации/&*/
При расставлении приоритетов в стилизации объектов необходимо делать так, что разница в приоритетах была мимнимальной, чтоб оставалась возможность ещё повысить приоритет
допустим при обращении к объекту по имени класса допустим main  сначала присваиваем красный цвет, потом зеленый - итог будет красный цвет, потому что в таблице стилей запись находится ниже
а вот если обратиться через тип_контейнера.имя_контейнера то приоритет в таблице стилей будет выше, чем просто по имени класса, но ниже, чем по id

<div class="main" id="main-2">
    <p>text 1</p>
    <p>text 1</p>
    <div>
        <p>text 2</p>
        <p>text 2</p>
    </div>
 </div>
------------------------------------

div {
    background-color: rgb(82, 81, 81);
}
div.main {                          /* приоритет выше, чем у .main
    background-color: rgb(23, 244, 63);
}

.main {
    background-color: red;
}

--@&--

^66 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/как применить селекторы сразу к нескольким классам (объектам)/&*/
в таблице стилей можно через "," перечислять все объекты, к которым надо применить тот или иной селектор 
<div class="main" id="main-2">
    <p>text 1</p>
    <p>text 1</p>
    <div>
        <p>text 2</p>
        <p>text 2</p>
    </div>
 </div>
------------------------------------

div {
    background-color: rgb(82, 81, 81);
}
div.main {                          /* приоритет выше, чем у .main
    background-color: rgb(23, 244, 63);
}

.main {
    background-color: red;
}

--@&--

^67 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/как увеличить вес приоритета объекта расширив имя класса/&*/
в таблице стилей можно через "," перечислять все объекты, к которым надо применить тот или иной селектор 

<div class="main" id="main-2">
    <p>text 1</p>
    <p>text 1</p>
 </div>

 <div class="main super-main" id="main-2">   /*видим, что через пробел к имени класа main добавлено имя super-main
    <p>text 1</p>
    <p>text 1</p>
 </div>
------------------------------------

div {
    background-color: rgb(82, 81, 81);
}
.main {
    background-color: aqua;
}

.main.super-main {                /* теперь вес данного объекта не 10 а 20, то есть он приоритетнее
    background-color: red;
    border-style: solid;
}

--@&--

^68 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/каким свойством устанавливается наивысшая приоритетность, не позволяющая его изменить/&*/
в CSS крайне редко, но всё же используется свойство !important
которое через пробел прописывается к требуемому свойству и не зависимо с каким приоритетом используется тег оно будет в преимуществе

.main.super-main {
    background-color: red;
    border-style: solid;
}

.main {
    background-color: rgb(82, 44, 197) !important;  /* несмотря на то, что у тега с весом 20 заливка красная, все окрасится в синий
    border-style: solid;
}
--@&--
^69 .
/&*/---HTML_CSS_создание_сайтов---/&*/Особенности стилизации, работа с файлами CSS/&*/как обратиться через наследование не только к дочерним тегам, но и ко всем тегам этого типа вместе с вложенными/&*/
вместо обычного знака ">" после имени класса или названия тега ставят пробел и указывают название тега (имя класса)
--@&--

^70 .
/&*/---HTML_CSS_создание_сайтов---/&*/Единицы измерений, величины/&*/какой шрифт и величины измерений устанавливаются по умолчанию/&*/
Шрифт по умолчанию = 16px соответственно и величины 1em  и  1rem = 16px
--@&--

^71 .
/&*/---HTML_CSS_создание_сайтов---/&*/Варианты позиционирования и размещения элементов на веб странице/&*/ Создание интернет магазина с размещением карточек товаров по три в ряд на экране full HD/&*/
1. Создаём новый проект
2. Подключаем css файл
3. Сбросим все настройки для элементов по умолчанию (margin И padding)
4. Создадим главный контейнер, в котором будем хранить всю сетку с карточками товаров
5. Внутри главного контейнера создадим контейнер .card  (карточка товара) и в него поместим пока любую картинку, предварительно поместив её в папку images
		<div class="card"><img src="static/images/card_1.jpg" alt=""></div>
6. Зададим пока производьцный размер картинке в таблице стилей например 
	img {
    		width: 100px;
	}
7. Сделаем наш главный контейнер со свойством display: grid;  что позволит размещать карточки товаров в виде сетки
8. Добавим ещё например 9 картинок в гланвй контейнер.
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
      <div class="card"><img src="static/images/card_1.jpg" alt=""></div>
9. С помощью свойства grid-template-columns  распределим наши картинки по количеству колонок - сделаем равные части для всех 3 колонок
	доли обозначаются с помощью указателя fr
	три равные доли будут обозначаться следующим образом: 1fr 1fr 1fr
10. Зададим фиксированное количество строк, выделяемых в сетке для картинок с помощью аналогичной функции:
	grid-template-rows: repeat(4 500px);   /* это означает что мы выделили 4 одинаковые строки высотой по 500px
						/* кроме того, можно было задать строки разной высоты, для этого можно было набрать:
	grid-template-rows: 100px 200px 300px;
11. Каждая картинка находится в отдельном контейнере, поэтому можно задать ширину картинки как 100% от ширины родительского контейнера, оставим только 9 карт товара, потому что 10-я должна будет отображаться уже на следующей странице

12. Если убрать фиксированную высоту строки сетки контейнера, то он будет подстраиваться под высоту контента, кроме этого настроим отступы между картинками
	Сделаем логическое размещение элементов в файле css (сначала описывается стиль общего контейнера, затем карточки товара, затем рисунка (который находится внутри карточки товара))
13. При этом при уменьшении размера экрана размеры карточек товара будут адаптивно уменьшаться	
--@&--